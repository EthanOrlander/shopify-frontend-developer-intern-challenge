{"version":3,"sources":["components/APODCard.tsx","components/PageError.tsx","components/SkeletonAPODCard.tsx","containers/APODCardList.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","Image","img","OverlayTop","OverlayBottom","APODCard","item","title","explanation","hdurl","url","date","liked","setLiked","MediaCard","portrait","moment","format","description","alt","width","height","style","objectFit","objectPosition","src","Button","icon","Icon","source","fill","accessibilityLabel","onClick","plain","ErrorBanner","status","Banner","SkeletonAPODCard","Card","sectioned","TextContainer","SkeletonDisplayText","size","SkeletonBodyText","APODCardList","page","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","startDate","subtract","endDate","params","URLSearchParams","api_key","start_date","end_date","fetch","toString","then","res","ok","json","errorMessage","JSON","stringify","Error","result","map","resItem","id","sort","a","b","diff","message","catch","err","cards","Array","_","i","App","setPage","Page","subtitle","narrowWidth","pagination","hasPrevious","hasNext","onNext","onPrevious","Layout","AnnotatedSection","ReactDOM","render","AppProvider","i18n","enTranslations","theme","colors","surface","onSurface","interactive","secondary","primary","critical","warning","highlight","success","decorative","document","getElementById"],"mappings":"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","file":"static/js/main.f5c87094.chunk.js","sourcesContent":["import {MediaCard, Icon, Button} from '@shopify/polaris';\nimport styled from 'styled-components';\nimport {HeartMajor} from '@shopify/polaris-icons';\nimport moment from 'moment';\n\nimport {APODResult} from '../APOD';\n\ninterface APODCardProps {\n  item: APODResult;\n  liked: boolean;\n  setLiked: (liked: boolean) => void;\n}\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst Image = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n`;\n\nconst OverlayTop = styled.div`\n  position: absolute;\n  top: 0;\n  background: rgb(0, 0, 0);\n  background: rgba(0, 0, 0, 0.5); /* Black see-through */\n  color: #f1f1f1;\n  width: 100%;\n  font-size: 20px;\n  padding: 20px;\n  text-align: center;\n`;\n\nconst OverlayBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  background: rgb(0, 0, 0);\n  background: rgba(0, 0, 0, 0.5); /* Black see-through */\n  width: 100%;\n  font-size: 20px;\n  padding: 20px;\n  text-align: center;\n`;\n\nexport function APODCard({\n  item: {title, explanation, hdurl, url, date},\n  liked,\n  setLiked,\n}: APODCardProps) {\n  const handleLike = () => setLiked(!liked);\n  return (\n    <MediaCard\n      portrait\n      title={moment(date).format('MMM. D, YYYY')}\n      description={explanation}\n      // popoverActions={[{content: 'Dismiss', onAction: () => {}}]}\n    >\n      <Container>\n        <Image\n          alt=\"\"\n          width=\"100%\"\n          height=\"100%\"\n          style={{\n            objectFit: 'cover',\n            objectPosition: 'center',\n          }}\n          src={hdurl ? hdurl : url}\n        />\n        <OverlayTop>{title}</OverlayTop>\n        <OverlayBottom>\n          <Button\n            icon={() => (\n              <Icon\n                source={() => (\n                  <HeartMajor style={{fill: liked ? 'red' : 'white'}} />\n                )}\n                accessibilityLabel=\"Like button\"\n              />\n            )}\n            onClick={handleLike}\n            plain\n          />\n        </OverlayBottom>\n      </Container>\n    </MediaCard>\n  );\n}\n","import {Banner, BannerStatus} from '@shopify/polaris';\n\ninterface ErrorBannerProps {\n  title: string;\n  description: string | undefined | null;\n  status: BannerStatus;\n}\n\nexport function ErrorBanner({title, description, status}: ErrorBannerProps) {\n  return (\n    <Banner title={title} status={status}>\n      <p>{description}</p>\n    </Banner>\n  );\n}\n","import {\n  Card,\n  TextContainer,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n} from '@shopify/polaris';\n\nexport function SkeletonAPODCard() {\n  return (\n    <Card sectioned>\n      <TextContainer>\n        <SkeletonDisplayText size=\"small\" />\n        <SkeletonBodyText />\n      </TextContainer>\n    </Card>\n  );\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport {APODResult} from 'APOD';\nimport {APODCard} from 'components/APODCard';\nimport {ErrorBanner} from 'components/PageError';\nimport {SkeletonAPODCard} from 'components/SkeletonAPODCard';\nimport moment from 'moment';\nimport {useState, useEffect} from 'react';\n\ninterface APODCardListProps {\n  page: number;\n}\n\ninterface APODItem {\n  id: string;\n  item: APODResult;\n  liked: boolean;\n}\n\nexport function APODCardList({page}: APODCardListProps) {\n  const [error, setError] = useState<string | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState<APODItem[]>([]);\n\n  const setLiked = (id: string, liked: boolean) => {\n    setItems((items) => {\n      const updatedItems = items.map((item) => {\n        if (item.id === id) return {...item, liked};\n        return item;\n      });\n      return updatedItems;\n    });\n  };\n\n  useEffect(() => {\n    // TODO abstract this into API wrapper\n    /* Since hitting NASA API on frontend, impossible not to expose key.\n     * Ideally, I'd create a wrapper cloud function (ie. lambda@edge, cloudflare worker...) & implement quotas per-user\n     */\n    const startDate = moment()\n      .subtract(10 * (page + 1) - 1, 'd')\n      .format('YYYY-MM-DD');\n    const endDate = moment()\n      .subtract(10 * page, 'd')\n      .format('YYYY-MM-DD');\n    setIsLoaded(false);\n    const paramObj = {\n      api_key: 'IF48Q1mc5u5nwZMQHnbSmEDJU8kxlmCzzUABNfUF',\n      start_date: startDate,\n      end_date: endDate,\n    };\n    const params = new URLSearchParams(paramObj);\n    fetch(`https://api.nasa.gov/planetary/apod?${params.toString()}`)\n      .then((res) => {\n        if (res.ok) return res.json();\n        let errorMessage = '';\n        switch (res.status) {\n          case 403:\n            errorMessage =\n              'Authentication error. Ensure you are using a valid API key';\n            break;\n          default:\n            errorMessage = `Unrecognized error: NASA API response: ${JSON.stringify(\n              res,\n            )}`;\n            break;\n        }\n        throw Error(errorMessage);\n      })\n      .then(\n        (result: APODResult[]) => {\n          setIsLoaded(true);\n          setItems(() => {\n            const newItems = result\n              .map((resItem) => {\n                return {id: resItem.date, item: resItem, liked: false};\n              })\n\n              // eslint-disable-next-line id-length\n              .sort((a, b) => moment(b.item.date).diff(moment(a.item.date)));\n            return newItems;\n          });\n        },\n        (error: Error) => {\n          setIsLoaded(true);\n          setError(error.message);\n        },\n      )\n      .catch((err) => setError(err));\n  }, [page]);\n\n  if (error) {\n    return (\n      <ErrorBanner title=\"API Error\" description={error} status=\"critical\" />\n    );\n  } else if (!isLoaded) {\n    return (\n      <>\n        {[...Array(10)].map((_, i) => (\n          <SkeletonAPODCard key={i} />\n        ))}\n      </>\n    );\n  } else {\n    const cards = items.map(({id, item, liked}) => (\n      <APODCard\n        key={id}\n        item={item}\n        liked={liked}\n        setLiked={(liked: boolean) => setLiked(id, liked)}\n      />\n    ));\n    return <>{cards}</>;\n  }\n}\n","import {Page, Layout} from '@shopify/polaris';\nimport {APODCardList} from 'containers/APODCardList';\nimport {useState} from 'react';\n\nexport function App() {\n  const [page, setPage] = useState(0);\n  return (\n    // TODO Infinite scroll (pagination's behaviour on mobile) not functioning\n    <Page\n      title=\"Spacestagram\"\n      subtitle=\"Brought to you by NASA's Astronomy Photo of the Day (APOD) API\"\n      narrowWidth\n      pagination={{\n        hasPrevious: page > 0,\n        hasNext: true,\n        onNext: () => setPage((page) => page + 1),\n        onPrevious: () => setPage((page) => page - 1),\n      }}\n    >\n      <Layout>\n        <Layout.AnnotatedSection>\n          <APODCardList page={page} />\n        </Layout.AnnotatedSection>\n      </Layout>\n    </Page>\n  );\n  // return <div>{JSON.stringify(items)}</div>;\n}\n","import ReactDOM from 'react-dom';\nimport {AppProvider} from '@shopify/polaris';\nimport enTranslations from '@shopify/polaris/locales/en.json';\n\nimport '@shopify/polaris/dist/styles.css';\nimport {App} from './App';\n\nReactDOM.render(\n  <AppProvider\n    i18n={enTranslations}\n    theme={{\n      colors: {\n        surface: '#111213',\n        onSurface: '#111213',\n        interactive: '#2e72d2',\n        secondary: '#111213',\n        primary: '#3b5998',\n        critical: '#d82c0d',\n        warning: '#ffc453',\n        highlight: '#5bcdda',\n        success: '#008060',\n        decorative: '#ffc96b',\n      },\n    }}\n  >\n    <App />\n  </AppProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}